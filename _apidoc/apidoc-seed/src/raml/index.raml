#%RAML 0.8
---
title: iFLUX API
baseUri: https://api.iflux.io/{version}/
version: v0.2
protocols: [HTTPS]
mediaType: application/json

traits:
  - private: !include _traits/private.raml

/events:
  description: This endpoint is used by event sources (e.g. sensors) to notify the occurence of events.
  post:
    description: Notify a list of events that have been captured by an event source. The events are processed asynchronously by the iFLUX service. The client must always send a list, even if it wants to notify a single event.
    body:
      application/json:
        example: |
          [
            {
              "timestamp" : "2015-01-12T05:21:07Z",
              "source" : "/event-sources/JI8928JFK",
              "type" : "/eventTypes/temperatureEventSchema",
              "properties" : {
                "temperature" : 22.5,
                "location" : "room 1"
              }
            },
            {
              "timestamp" : "2015-01-12T05:22:07Z",
              "source" : "/event-sources/JI8928JFK",
              "type" : "/eventTypes/temperatureEventSchema",
              "properties" : {
                "temperature" : 22.8,
                "location" : "room 1"
              }
            }
          ]
    responses:
      202:
        description: Accepted

/actions:
  description: This endpoint is implemented by action targets (e.g. actuators) and invoked by the iFLUX middleware to trigger actions.
  post:
    description: Trigger a list of actions, after the evaluation of rules and in reaction to the notification of events. The actions can be processes asynchronously.
    body:
      application/json:
        example: |
          [
            {
              "context" : {
                "event" : "not used in this version of the api",
                "rule" : "not used in this version of the api",
              },
              "type" : "/actionTypes/sendAlertViaEmailSchema",
              "properties" : {
                "email" : "user.name@iflux.io",
                "subject" : "Alert: something has happened!",
                "body" : "An event has been notified to iFLUX by a source and a rule states that we should inform you about it."
              }
            },
            {
              "context" : {
                "event" : "not used in this version of the api",
                "rule" : "not used in this version of the api",
              },
              "type" : "/actionTypes/sendAlertViaEmailSchema",
              "properties" : {
                "email" : "user.name@iflux.io",
                "subject" : "Alert: something has happened!",
                "body" : "An event has been notified to iFLUX by a source and a rule states that we should inform you about it."
              }
            }
          ]
    responses:
      202:
        description: Accepted

/rules:
  description: This endpoint is used to manage the rules evaluated by iFLUX when events are notified.
  post:
    description: Create a new rule.
    body:
      application/json:
        example: |
          {
            "description" : "When a temperature event is received, notify Bob by email.",
            "if" : {
              "eventSource" : "/event-sources/JI8928JFK",
              "eventType" : "/eventTypes/temperatureEventSchema",
              "eventProperties" : {}
            }
            "then" : {
              "actionTarget" : "https://mail-gateway.iflux.io/api",
              "actionSchema" : "{\"type\" : \"sendEmail\", \"properties\" : {\"to\" : \"bob@iflux.io\", \"subject\" : \"New temperature\", \"body\" : \"The temperature in {{ properties.location }} is now: {{ properties.temperature }}.\" }}"
            }
          }
    responses:
      201:
        description: Created



